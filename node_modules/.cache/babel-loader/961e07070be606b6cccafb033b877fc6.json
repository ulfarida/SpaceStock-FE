{"ast":null,"code":"var _jsxFileName = \"/home/alta7/Documents/Alterra-Academy/Alterra Academy/SpaceStock/SpaceStock-FE/src/components/maps.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport L from 'leaflet';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nclass Maps extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {// // Creating map options\n      // var mapOptions = {\n      // center: [17.385044, 78.486671],\n      // zoom: 10\n      // }\n      // // Creating a map object\n      // var map = new L.map('map', mapOptions);\n      // // Creating a Layer object\n      // var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');\n      // // Adding layer to the map\n      // map.addLayer(layer);\n    };\n  }\n\n  render() {\n    let iconBelumValid = L.icon({\n      iconRetinaUrl: React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"location_on\"),\n      iconUrl: React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"location_on\"),\n      iconSize: [45, 45],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 45],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [0, -43] // point from which the popup should open relative to the iconAnchor\n\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(LeafletMap, {\n      center: [-6.83333, 107.48333],\n      zoom: 12,\n      maxZoom: 30,\n      attributionControl: true,\n      zoomControl: true,\n      doubleClickZoom: true,\n      scrollWheelZoom: true,\n      dragging: true,\n      animate: true,\n      easeLinearity: 0.35,\n      className: \"kotakMapsSurveyor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["/home/alta7/Documents/Alterra-Academy/Alterra Academy/SpaceStock/SpaceStock-FE/src/components/maps.jsx"],"names":["React","Component","withRouter","Link","L","Map","LeafletMap","TileLayer","Marker","Popup","Maps","componentDidMount","render","iconBelumValid","icon","iconRetinaUrl","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,KAA/C,QAA4D,eAA5D;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAEzBU,iBAFyB,GAEL,YAAY,CAC5B;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACH,KAjBwB;AAAA;;AAmBzBC,EAAAA,MAAM,GAAI;AACN,QAAIC,cAAc,GAAGT,CAAC,CAACU,IAAF,CAAO;AACxBC,MAAAA,aAAa,EAAE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADS;AAExBC,MAAAA,OAAO,EAAE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFe;AAGxBC,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHc;AAGJ;AACpBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJY;AAIF;AACtBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CALY;AAKF;AACtBC,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,EAAJ,CANU;AAMD;AACvBC,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CAPW,CAOF;;AAPE,KAAP,CAArB;AASA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAG,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEA,oBAAC,UAAD;AACA,MAAA,MAAM,EAAE,CAAC,CAAC,OAAF,EAAW,SAAX,CADR;AAEA,MAAA,IAAI,EAAE,EAFN;AAGA,MAAA,OAAO,EAAE,EAHT;AAIA,MAAA,kBAAkB,EAAE,IAJpB;AAKA,MAAA,WAAW,EAAE,IALb;AAMA,MAAA,eAAe,EAAE,IANjB;AAOA,MAAA,eAAe,EAAE,IAPjB;AAQA,MAAA,QAAQ,EAAE,IARV;AASA,MAAA,OAAO,EAAE,IATT;AAUA,MAAA,aAAa,EAAE,IAVf;AAWA,MAAA,SAAS,EAAC,mBAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaA,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CAFA,CADJ;AAqDH;;AAlFwB;;AAqF7B,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport L from 'leaflet';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nclass Maps extends Component {\n\n    componentDidMount = async () => {\n        // // Creating map options\n        // var mapOptions = {\n        // center: [17.385044, 78.486671],\n        // zoom: 10\n        // }\n        \n        // // Creating a map object\n        // var map = new L.map('map', mapOptions);\n        \n        // // Creating a Layer object\n        // var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');\n        \n        // // Adding layer to the map\n        // map.addLayer(layer);\n    }\n\n    render () {\n        let iconBelumValid = L.icon({\n            iconRetinaUrl: <i className=\"material-icons\">location_on</i>,\n            iconUrl: <i className=\"material-icons\">location_on</i>,\n            iconSize: [45, 45], // size of the icon\n            shadowSize: [50, 64], // size of the shadow\n            iconAnchor: [22, 45], // point of the icon which will correspond to marker's location\n            shadowAnchor: [4, 62], // the same for the shadow\n            popupAnchor: [0, -43] // point from which the popup should open relative to the iconAnchor\n          });\n        return (\n            <React.Fragment>\n              <div id = \"map\"></div>\n            <LeafletMap\n            center={[-6.83333, 107.48333]}\n            zoom={12}\n            maxZoom={30}\n            attributionControl={true}\n            zoomControl={true}\n            doubleClickZoom={true}\n            scrollWheelZoom={true}\n            dragging={true}\n            animate={true}\n            easeLinearity={0.35}\n            className=\"kotakMapsSurveyor\"\n          >\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n            {/* {this.props.buildingData.map((building, i) => {\n              return (\n                <Marker\n                  icon={iconBelumValid}\n                  position={[\n                    building.latitude,\n                    building.longitude\n                  ]}\n                > */}\n                  {/* <Popup>\n                    <div style={{ fontSize: \"10px\", color: \"grey\" }}>\n                      {building[\"objek_pajak\"].jenis_building}\n                    </div>\n                    <div style={{ fontSize: \"13px\", color: \"black\" }}>\n                      {building[\"objek_pajak\"].judul_building}\n                    </div>\n                    <Link\n                      to={`/surveyor/detail-reklame/${reklame[\"bukti_pembayaran\"].id}`}\n                      style={{ textDecoration: \"none\" }}\n                    >\n                      <div style={{ fontSize: \"10px\" }}>\n                        {reklame[\"objek_pajak\"].lokasi}\n                      </div>\n                    </Link>\n                    <div style={{ fontSize: \"9px\" }}>\n                      Jumlah Tervalidasi : {reklame.kodeQR_terscan} /{\" \"}\n                      {reklame[\"bukti_pembayaran\"].jumlah_reklame}\n                    </div>\n                  </Popup> */}\n                {/* </Marker>\n              );\n            })} */}\n          </LeafletMap>\n            </React.Fragment>    \n        );\n    }\n}\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}