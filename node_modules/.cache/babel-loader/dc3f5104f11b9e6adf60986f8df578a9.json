{"ast":null,"code":"/*\n* File: jquery.flexisel.js\n* Version: 2.2.2\n* Description: Responsive carousel jQuery plugin\n* Author: 9bit Studios\n* Copyright 2016, 9bit Studios\n* http://www.9bitstudios.com\n* Free to use and abuse under the MIT license.\n* http://www.opensource.org/licenses/mit-license.php\n*/\n(function ($) {\n  $.fn.flexisel = function (options) {\n    var defaults = $.extend({\n      visibleItems: 4,\n      itemsToScroll: 3,\n      animationSpeed: 400,\n      infinite: true,\n      navigationTargetSelector: null,\n      autoPlay: {\n        enable: false,\n        interval: 5000,\n        pauseOnHover: true\n      },\n      responsiveBreakpoints: {\n        portrait: {\n          changePoint: 480,\n          visibleItems: 1,\n          itemsToScroll: 1\n        },\n        landscape: {\n          changePoint: 640,\n          visibleItems: 2,\n          itemsToScroll: 2\n        },\n        tablet: {\n          changePoint: 768,\n          visibleItems: 3,\n          itemsToScroll: 3\n        }\n      },\n      loaded: function () {},\n      before: function () {},\n      after: function () {},\n      resize: function () {}\n    }, options);\n    /******************************\n    Private Variables\n    *******************************/\n\n    var object = $(this);\n    var settings = $.extend(defaults, options);\n    var itemsWidth;\n    var canNavigate = true;\n    var itemCount;\n    var itemsVisible = settings.visibleItems;\n    var itemsToScroll = settings.itemsToScroll;\n    var responsivePoints = [];\n    var resizeTimeout;\n    var autoPlayInterval;\n    /******************************\n    Public Methods\n    *******************************/\n\n    var methods = {\n      init: function () {\n        return this.each(function () {\n          methods.appendHTML();\n          methods.setEventHandlers();\n          methods.initializeItems();\n        });\n      },\n\n      /******************************\n      Initialize Items\n      *******************************/\n      initializeItems: function () {\n        var obj = settings.responsiveBreakpoints;\n\n        for (var i in obj) {\n          responsivePoints.push(obj[i]);\n        }\n\n        responsivePoints.sort(function (a, b) {\n          return a.changePoint - b.changePoint;\n        });\n        var childSet = object.children();\n        childSet.first().addClass(\"index\");\n        itemsWidth = methods.getCurrentItemWidth();\n        itemCount = childSet.length;\n        childSet.width(itemsWidth);\n\n        if (settings.infinite) {\n          methods.offsetItemsToBeginning(Math.floor(childSet.length / 2));\n          object.css({\n            'left': -itemsWidth * Math.floor(childSet.length / 2)\n          });\n        }\n\n        $(window).trigger('resize');\n        object.fadeIn();\n        settings.loaded.call(this, object);\n      },\n\n      /******************************\n      Append HTML\n      *******************************/\n      appendHTML: function () {\n        object.addClass(\"nbs-flexisel-ul\");\n        object.wrap(\"<div class='nbs-flexisel-container'><div class='nbs-flexisel-inner'></div></div>\");\n        object.find(\"li\").addClass(\"nbs-flexisel-item\");\n\n        if (settings.navigationTargetSelector && $(settings.navigationTargetSelector).length > 0) {\n          $(\"<div class='nbs-flexisel-nav-left'></div><div class='nbs-flexisel-nav-right'></div>\").appendTo(settings.navigationTargetSelector);\n        } else {\n          settings.navigationTargetSelector = object.parent();\n          $(\"<div class='nbs-flexisel-nav-left'></div><div class='nbs-flexisel-nav-right'></div>\").insertAfter(object);\n        }\n\n        if (settings.infinite) {\n          var childSet = object.children();\n          var cloneContentBefore = childSet.clone();\n          var cloneContentAfter = childSet.clone();\n          object.prepend(cloneContentBefore);\n          object.append(cloneContentAfter);\n        }\n      },\n\n      /******************************\n      Set Event Handlers\n      *******************************/\n      setEventHandlers: function () {\n        var self = this;\n        var childSet = object.children();\n        $(window).on(\"resize\", function (event) {\n          canNavigate = false;\n          clearTimeout(resizeTimeout);\n          resizeTimeout = setTimeout(function () {\n            canNavigate = true;\n            methods.calculateDisplay();\n            itemsWidth = methods.getCurrentItemWidth();\n            childSet.width(itemsWidth);\n\n            if (settings.infinite) {\n              object.css({\n                'left': -itemsWidth * Math.floor(childSet.length / 2)\n              });\n            } else {\n              methods.clearDisabled();\n              $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-left\").addClass('disabled');\n              object.css({\n                'left': 0\n              });\n            }\n\n            settings.resize.call(self, object);\n          }, 100);\n        });\n        $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-left\").on(\"click\", function (event) {\n          methods.scroll(true);\n        });\n        $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-right\").on(\"click\", function (event) {\n          methods.scroll(false);\n        });\n\n        if (settings.autoPlay.enable) {\n          methods.setAutoplayInterval();\n\n          if (settings.autoPlay.pauseOnHover === true) {\n            object.on({\n              mouseenter: function () {\n                canNavigate = false;\n              },\n              mouseleave: function () {\n                canNavigate = true;\n              }\n            });\n          }\n        }\n\n        object[0].addEventListener('touchstart', methods.touchHandler.handleTouchStart, false);\n        object[0].addEventListener('touchmove', methods.touchHandler.handleTouchMove, false);\n      },\n\n      /******************************\n      Calculate Display\n      *******************************/\n      calculateDisplay: function () {\n        var contentWidth = $('html').width();\n        var largestCustom = responsivePoints[responsivePoints.length - 1].changePoint; // sorted array \n\n        for (var i in responsivePoints) {\n          if (contentWidth >= largestCustom) {\n            // set to default if width greater than largest custom responsiveBreakpoint \n            itemsVisible = settings.visibleItems;\n            itemsToScroll = settings.itemsToScroll;\n            break;\n          } else {\n            // determine custom responsiveBreakpoint to use\n            if (contentWidth < responsivePoints[i].changePoint) {\n              itemsVisible = responsivePoints[i].visibleItems;\n              itemsToScroll = responsivePoints[i].itemsToScroll;\n              break;\n            } else {\n              continue;\n            }\n          }\n        }\n      },\n\n      /******************************\n      Scroll\n      *******************************/\n      scroll: function (reverse) {\n        if (typeof reverse === 'undefined') {\n          reverse = true;\n        }\n\n        if (canNavigate == true) {\n          canNavigate = false;\n          settings.before.call(this, object);\n          itemsWidth = methods.getCurrentItemWidth();\n\n          if (settings.autoPlay.enable) {\n            clearInterval(autoPlayInterval);\n          }\n\n          if (!settings.infinite) {\n            var scrollDistance = itemsWidth * itemsToScroll;\n\n            if (reverse) {\n              object.animate({\n                'left': methods.calculateNonInfiniteLeftScroll(scrollDistance)\n              }, settings.animationSpeed, function () {\n                settings.after.call(this, object);\n                canNavigate = true;\n              });\n            } else {\n              object.animate({\n                'left': methods.calculateNonInfiniteRightScroll(scrollDistance)\n              }, settings.animationSpeed, function () {\n                settings.after.call(this, object);\n                canNavigate = true;\n              });\n            }\n          } else {\n            object.animate({\n              'left': reverse ? \"+=\" + itemsWidth * itemsToScroll : \"-=\" + itemsWidth * itemsToScroll\n            }, settings.animationSpeed, function () {\n              settings.after.call(this, object);\n              canNavigate = true;\n\n              if (reverse) {\n                methods.offsetItemsToBeginning(itemsToScroll);\n              } else {\n                methods.offsetItemsToEnd(itemsToScroll);\n              }\n\n              methods.offsetSliderPosition(reverse);\n            });\n          }\n\n          if (settings.autoPlay.enable) {\n            methods.setAutoplayInterval();\n          }\n        }\n      },\n      touchHandler: {\n        xDown: null,\n        yDown: null,\n        handleTouchStart: function (evt) {\n          this.xDown = evt.touches[0].clientX;\n          this.yDown = evt.touches[0].clientY;\n        },\n        handleTouchMove: function (evt) {\n          if (!this.xDown || !this.yDown) {\n            return;\n          }\n\n          var xUp = evt.touches[0].clientX;\n          var yUp = evt.touches[0].clientY;\n          var xDiff = this.xDown - xUp;\n          var yDiff = this.yDown - yUp; // only comparing xDiff\n          // compare which is greater against yDiff to determine whether left/right or up/down  e.g. if (Math.abs( xDiff ) > Math.abs( yDiff ))\n\n          if (Math.abs(xDiff) > 0) {\n            if (xDiff > 0) {\n              // swipe left\n              methods.scroll(false);\n            } else {\n              //swipe right\n              methods.scroll(true);\n            }\n          }\n          /* reset values */\n\n\n          this.xDown = null;\n          this.yDown = null;\n          canNavigate = true;\n        }\n      },\n\n      /******************************\n      Utility Functions\n      *******************************/\n      getCurrentItemWidth: function () {\n        return object.parent().width() / itemsVisible;\n      },\n      offsetItemsToBeginning: function (number) {\n        if (typeof number === 'undefined') {\n          number = 1;\n        }\n\n        for (var i = 0; i < number; i++) {\n          object.children().last().insertBefore(object.children().first());\n        }\n      },\n      offsetItemsToEnd: function (number) {\n        if (typeof number === 'undefined') {\n          number = 1;\n        }\n\n        for (var i = 0; i < number; i++) {\n          object.children().first().insertAfter(object.children().last());\n        }\n      },\n      offsetSliderPosition: function (reverse) {\n        var left = parseInt(object.css('left').replace('px', ''));\n\n        if (reverse) {\n          left = left - itemsWidth * itemsToScroll;\n        } else {\n          left = left + itemsWidth * itemsToScroll;\n        }\n\n        object.css({\n          'left': left\n        });\n      },\n      getOffsetPosition: function () {\n        return parseInt(object.css('left').replace('px', ''));\n      },\n      calculateNonInfiniteLeftScroll: function (toScroll) {\n        methods.clearDisabled();\n\n        if (methods.getOffsetPosition() + toScroll >= 0) {\n          $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-left\").addClass('disabled');\n          return 0;\n        } else {\n          return methods.getOffsetPosition() + toScroll;\n        }\n      },\n      calculateNonInfiniteRightScroll: function (toScroll) {\n        methods.clearDisabled();\n        var negativeOffsetLimit = itemCount * itemsWidth - itemsVisible * itemsWidth;\n\n        if (methods.getOffsetPosition() - toScroll <= -negativeOffsetLimit) {\n          $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-right\").addClass('disabled');\n          return -negativeOffsetLimit;\n        } else {\n          return methods.getOffsetPosition() - toScroll;\n        }\n      },\n      setAutoplayInterval: function () {\n        autoPlayInterval = setInterval(function () {\n          if (canNavigate) {\n            methods.scroll(false);\n          }\n        }, settings.autoPlay.interval);\n      },\n      clearDisabled: function () {\n        var parent = $(settings.navigationTargetSelector);\n        parent.find(\".nbs-flexisel-nav-left\").removeClass('disabled');\n        parent.find(\".nbs-flexisel-nav-right\").removeClass('disabled');\n      }\n    };\n\n    if (methods[options]) {\n      // $(\"#element\").pluginName('methodName', 'arg1', 'arg2');\n      return methods[options].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof options === 'object' || !options) {\n      // $(\"#element\").pluginName({ option: 1, option:2 });\n      return methods.init.apply(this);\n    } else {\n      $.error('Method \"' + method + '\" does not exist in flexisel plugin!');\n    }\n  };\n})(jQuery);","map":{"version":3,"sources":["/home/alta7/Documents/Alterra-Academy/Alterra Academy/SpaceStock/SpaceStock-FE/src/styles/js/jquery.flexisel.js"],"names":["$","fn","flexisel","options","defaults","extend","visibleItems","itemsToScroll","animationSpeed","infinite","navigationTargetSelector","autoPlay","enable","interval","pauseOnHover","responsiveBreakpoints","portrait","changePoint","landscape","tablet","loaded","before","after","resize","object","settings","itemsWidth","canNavigate","itemCount","itemsVisible","responsivePoints","resizeTimeout","autoPlayInterval","methods","init","each","appendHTML","setEventHandlers","initializeItems","obj","i","push","sort","a","b","childSet","children","first","addClass","getCurrentItemWidth","length","width","offsetItemsToBeginning","Math","floor","css","window","trigger","fadeIn","call","wrap","find","appendTo","parent","insertAfter","cloneContentBefore","clone","cloneContentAfter","prepend","append","self","on","event","clearTimeout","setTimeout","calculateDisplay","clearDisabled","scroll","setAutoplayInterval","mouseenter","mouseleave","addEventListener","touchHandler","handleTouchStart","handleTouchMove","contentWidth","largestCustom","reverse","clearInterval","scrollDistance","animate","calculateNonInfiniteLeftScroll","calculateNonInfiniteRightScroll","offsetItemsToEnd","offsetSliderPosition","xDown","yDown","evt","touches","clientX","clientY","xUp","yUp","xDiff","yDiff","abs","number","last","insertBefore","left","parseInt","replace","getOffsetPosition","toScroll","negativeOffsetLimit","setInterval","removeClass","apply","Array","prototype","slice","arguments","error","method","jQuery"],"mappings":"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","sourcesContent":["/*\n* File: jquery.flexisel.js\n* Version: 2.2.2\n* Description: Responsive carousel jQuery plugin\n* Author: 9bit Studios\n* Copyright 2016, 9bit Studios\n* http://www.9bitstudios.com\n* Free to use and abuse under the MIT license.\n* http://www.opensource.org/licenses/mit-license.php\n*/\n\n(function ($) {\n\n    $.fn.flexisel = function (options) {\n\n        var defaults = $.extend({\n            visibleItems: 4,\n            itemsToScroll: 3,\n            animationSpeed: 400,\n            infinite: true,\n            navigationTargetSelector: null,\n            autoPlay: {\n                enable: false,\n                interval: 5000,\n                pauseOnHover: true\n            },\n            responsiveBreakpoints: { \n                portrait: { \n                    changePoint:480,\n                    visibleItems: 1,\n                    itemsToScroll: 1\n                }, \n                landscape: { \n                    changePoint:640,\n                    visibleItems: 2,\n                    itemsToScroll: 2\n                },\n                tablet: { \n                    changePoint:768,\n                    visibleItems: 3,\n                    itemsToScroll: 3\n                }\n            },\n            loaded: function(){ },\n            before: function(){ },\n            after: function(){ },\n            resize: function(){ }\n        }, options);\n        \n        /******************************\n        Private Variables\n        *******************************/         \n        \n        var object = $(this);\n        var settings = $.extend(defaults, options);        \n        var itemsWidth;\n        var canNavigate = true; \n        var itemCount; \n        var itemsVisible = settings.visibleItems; \n        var itemsToScroll = settings.itemsToScroll;\n        var responsivePoints = [];\n        var resizeTimeout;\n        var autoPlayInterval;        \n        \n        /******************************\n        Public Methods\n        *******************************/        \n        \n        var methods = {\n                \n            init: function() {\n                return this.each(function () {\n                    methods.appendHTML();\n                    methods.setEventHandlers();                  \n                    methods.initializeItems();                    \n                });\n            },\n\n            /******************************\n            Initialize Items\n            *******************************/            \n            \n            initializeItems: function() {\n                \n                var obj = settings.responsiveBreakpoints;\n                for(var i in obj) { responsivePoints.push(obj[i]); }\n                responsivePoints.sort(function(a, b) { return a.changePoint - b.changePoint; });\n                var childSet = object.children();\n                childSet.first().addClass(\"index\");\n                itemsWidth = methods.getCurrentItemWidth();\n                itemCount = childSet.length;\n                childSet.width(itemsWidth);\n                if(settings.infinite) {\n                    methods.offsetItemsToBeginning(Math.floor(childSet.length / 2)); \n                    object.css({\n                        'left': -itemsWidth * Math.floor(childSet.length / 2)\n                    }); \n                }\n                $(window).trigger('resize');              \n                object.fadeIn();\n                settings.loaded.call(this, object);\n                \n            },\n            \n            /******************************\n            Append HTML\n            *******************************/            \n            \n            appendHTML: function() {\n                \n                object.addClass(\"nbs-flexisel-ul\");\n                object.wrap(\"<div class='nbs-flexisel-container'><div class='nbs-flexisel-inner'></div></div>\");\n                object.find(\"li\").addClass(\"nbs-flexisel-item\");\n                \n                if(settings.navigationTargetSelector && $(settings.navigationTargetSelector).length > 0) {\n                    $(\"<div class='nbs-flexisel-nav-left'></div><div class='nbs-flexisel-nav-right'></div>\").appendTo(settings.navigationTargetSelector);\n                } else {\n                    settings.navigationTargetSelector = object.parent();\n                    $(\"<div class='nbs-flexisel-nav-left'></div><div class='nbs-flexisel-nav-right'></div>\").insertAfter(object);    \n                }\n                    \n                if(settings.infinite) {    \n                    var childSet = object.children();\n                    var cloneContentBefore = childSet.clone();\n                    var cloneContentAfter = childSet.clone();\n                    object.prepend(cloneContentBefore);\n                    object.append(cloneContentAfter);\n                }\n                \n            },\n                    \n            \n            /******************************\n            Set Event Handlers\n            *******************************/\n            setEventHandlers: function() {\n                var self = this;\n                var childSet = object.children();\n                \n                $(window).on(\"resize\", function(event){\n                    canNavigate = false;\n                    clearTimeout(resizeTimeout);\n                    resizeTimeout = setTimeout(function(){\n                        canNavigate = true;\n                        methods.calculateDisplay();\n                        itemsWidth = methods.getCurrentItemWidth();\n                        childSet.width(itemsWidth);\n                        \n                        if(settings.infinite) {\n                            object.css({\n                                'left': -itemsWidth * Math.floor(childSet.length / 2)\n                            });        \n                        } else {\n                            methods.clearDisabled();\n                            $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-left\").addClass('disabled');\n                            object.css({\n                                'left': 0\n                            });\n                        }\n                        \n                        settings.resize.call(self, object);\n\n                    }, 100);\n                    \n                });                    \n                \n                $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-left\").on(\"click\", function (event) {\n                    methods.scroll(true);\n                });\n                \n                $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-right\").on(\"click\", function (event) {\n                    methods.scroll(false);\n                });\n                \n                if(settings.autoPlay.enable) {\n\n                    methods.setAutoplayInterval();\n\n                    if (settings.autoPlay.pauseOnHover === true) {\n                        object.on({\n                            mouseenter : function() {\n                                canNavigate = false;\n                            },\n                            mouseleave : function() {\n                                canNavigate = true;\n                            }\n                        });        \n                    }            \n                    \n                }\n                \n                object[0].addEventListener('touchstart', methods.touchHandler.handleTouchStart, false);        \n                object[0].addEventListener('touchmove', methods.touchHandler.handleTouchMove, false);                \n                \n            },        \n            \n            /******************************\n            Calculate Display\n            *******************************/            \n            \n            calculateDisplay: function() {\n                var contentWidth = $('html').width();\n                var largestCustom = responsivePoints[responsivePoints.length-1].changePoint; // sorted array \n                \n                for(var i in responsivePoints) {\n                    \n                    if(contentWidth >= largestCustom) { // set to default if width greater than largest custom responsiveBreakpoint \n                        itemsVisible = settings.visibleItems;\n                        itemsToScroll = settings.itemsToScroll;\n                        break;\n                    }\n                    else { // determine custom responsiveBreakpoint to use\n                    \n                        if(contentWidth < responsivePoints[i].changePoint) {\n                            itemsVisible = responsivePoints[i].visibleItems;\n                            itemsToScroll = responsivePoints[i].itemsToScroll;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n                \n            },                \n            \n            /******************************\n            Scroll\n            *******************************/                \n            \n            scroll: function(reverse) {\n\n                if(typeof reverse === 'undefined') { reverse = true }\n\n                if(canNavigate == true) {\n                    canNavigate = false;\n                    settings.before.call(this, object);\n                    itemsWidth = methods.getCurrentItemWidth();\n                    \n                    if(settings.autoPlay.enable) {\n                        clearInterval(autoPlayInterval);\n                    }\n                    \n                    if(!settings.infinite) {\n                        \n                        var scrollDistance = itemsWidth * itemsToScroll;\n                        \n                        if(reverse) {                            \n                            object.animate({\n                                'left': methods.calculateNonInfiniteLeftScroll(scrollDistance)\n                            }, settings.animationSpeed, function(){\n                                settings.after.call(this, object);\n                                canNavigate = true;\n                            });                            \n                            \n                        } else {\n                            object.animate({\n                                'left': methods.calculateNonInfiniteRightScroll(scrollDistance)\n                            },settings.animationSpeed, function(){\n                                settings.after.call(this, object);\n                                canNavigate = true;\n                            });                                    \n                        }\n                        \n                        \n                        \n                    } else {                    \n                        object.animate({\n                            'left' : reverse ? \"+=\" + itemsWidth * itemsToScroll : \"-=\" + itemsWidth * itemsToScroll\n                        }, settings.animationSpeed, function() {\n                            settings.after.call(this, object);\n                            canNavigate = true;\n                            \n                            if(reverse) { \n                                methods.offsetItemsToBeginning(itemsToScroll); \n                            } else {\n                                methods.offsetItemsToEnd(itemsToScroll);\n                            }\n                            methods.offsetSliderPosition(reverse); \n                            \n                        });\n                    }\n                    \n                    if(settings.autoPlay.enable) {\n                        methods.setAutoplayInterval();\n                    }\n                    \n                }\n            },\n            \n            touchHandler: {\n\n                xDown: null,\n                yDown: null,\n                handleTouchStart: function(evt) {                                         \n                    this.xDown = evt.touches[0].clientX;                                      \n                    this.yDown = evt.touches[0].clientY;\n                }, \n                handleTouchMove: function (evt) {\n                    if (!this.xDown || !this.yDown) {\n                        return;\n                    }\n\n                    var xUp = evt.touches[0].clientX;                                    \n                    var yUp = evt.touches[0].clientY;\n\n                    var xDiff = this.xDown - xUp;\n                    var yDiff = this.yDown - yUp;\n                    \n                    // only comparing xDiff\n                    // compare which is greater against yDiff to determine whether left/right or up/down  e.g. if (Math.abs( xDiff ) > Math.abs( yDiff ))\n                    if (Math.abs( xDiff ) > 0) {\n                        if ( xDiff > 0 ) {\n                            // swipe left\n                            methods.scroll(false);\n                        } else {\n                            //swipe right\n                            methods.scroll(true);\n                        }                       \n                    }\n                    \n                    /* reset values */\n                    this.xDown = null;\n                    this.yDown = null;\n                    canNavigate = true;\n                }\n            },            \n            \n            /******************************\n            Utility Functions\n            *******************************/\n            \n            getCurrentItemWidth: function() {\n                return (object.parent().width())/itemsVisible;\n            },            \n            \n            offsetItemsToBeginning: function(number) {\n                if(typeof number === 'undefined') { number = 1 }\n                for(var i = 0; i < number; i++) {\n                    object.children().last().insertBefore(object.children().first());\n                }    \n            },                \n            \n            offsetItemsToEnd: function(number) {\n                if(typeof number === 'undefined') { number = 1 }\n                for(var i = 0; i < number; i++) {\n                    object.children().first().insertAfter(object.children().last());    \n                }\n            },            \n            \n            offsetSliderPosition: function(reverse) {\n                var left = parseInt(object.css('left').replace('px', ''));\n                if (reverse) { \n                    left = left - itemsWidth * itemsToScroll; \n                } else {\n                    left = left + itemsWidth * itemsToScroll;\n                }\n                object.css({\n                    'left': left\n                });\n            },\n\n            getOffsetPosition: function() {\n                return parseInt(object.css('left').replace('px', ''));    \n            },\n            \n            calculateNonInfiniteLeftScroll: function(toScroll) {\n                \n                methods.clearDisabled();\n                if(methods.getOffsetPosition() + toScroll >= 0) {\n                    $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-left\").addClass('disabled');\n                    return 0;\n                } else {\n                    return methods.getOffsetPosition() + toScroll;\n                }\n            },\n            \n            calculateNonInfiniteRightScroll: function(toScroll){\n                \n                methods.clearDisabled();\n                var negativeOffsetLimit = (itemCount * itemsWidth) - (itemsVisible * itemsWidth);\n                \n                if(methods.getOffsetPosition() - toScroll <= -negativeOffsetLimit) {\n                    $(settings.navigationTargetSelector).find(\".nbs-flexisel-nav-right\").addClass('disabled');\n                    return -negativeOffsetLimit;        \n                } else {\n                    return methods.getOffsetPosition() - toScroll;\n                }\n            },\n            \n            setAutoplayInterval: function(){\n                autoPlayInterval = setInterval(function() {\n                    if (canNavigate) {\n                        methods.scroll(false);\n                    }\n                }, settings.autoPlay.interval);                    \n            },\n            \n            clearDisabled: function() {\n                var parent = $(settings.navigationTargetSelector);\n                parent.find(\".nbs-flexisel-nav-left\").removeClass('disabled');\n                parent.find(\".nbs-flexisel-nav-right\").removeClass('disabled');\n            }                        \n            \n        };\n\n        if (methods[options]) {     // $(\"#element\").pluginName('methodName', 'arg1', 'arg2');\n            return methods[options].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof options === 'object' || !options) {     // $(\"#element\").pluginName({ option: 1, option:2 });\n            return methods.init.apply(this);  \n        } else {\n            $.error( 'Method \"' +  method + '\" does not exist in flexisel plugin!');\n        }        \n};\n\n})(jQuery);"]},"metadata":{},"sourceType":"module"}