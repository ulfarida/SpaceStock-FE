{"ast":null,"code":"var _jsxFileName = \"/home/alta7/Documents/Alterra-Academy/Alterra Academy/SpaceStock/SpaceStock-FE/src/components/maps.jsx\";\nimport React, { Component } from 'react';\nimport L from 'leaflet';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nclass Maps extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {// // Creating map options\n      // var mapOptions = {\n      // center: [17.385044, 78.486671],\n      // zoom: 10\n      // }\n      // // Creating a map object\n      // var map = new L.map('map', mapOptions);\n      // // Creating a Layer object\n      // var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');\n      // // Adding layer to the map\n      // map.addLayer(layer);\n    };\n  }\n\n  render() {\n    let iconBelumValid = L.icon({\n      iconRetinaUrl: React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"location_on\"),\n      iconUrl: React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"location_on\"),\n      iconSize: [45, 45],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 45],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [0, -43] // point from which the popup should open relative to the iconAnchor\n\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["/home/alta7/Documents/Alterra-Academy/Alterra Academy/SpaceStock/SpaceStock-FE/src/components/maps.jsx"],"names":["React","Component","L","Map","LeafletMap","TileLayer","Marker","Popup","Maps","componentDidMount","render","iconBelumValid","icon","iconRetinaUrl","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,KAA/C,QAA4D,eAA5D;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAEzBQ,iBAFyB,GAEL,YAAY,CAC5B;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACH,KAjBwB;AAAA;;AAmBzBC,EAAAA,MAAM,GAAI;AACN,QAAIC,cAAc,GAAGT,CAAC,CAACU,IAAF,CAAO;AACxBC,MAAAA,aAAa,EAAE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADS;AAExBC,MAAAA,OAAO,EAAE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFe;AAGxBC,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHc;AAGJ;AACpBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJY;AAIF;AACtBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CALY;AAKF;AACtBC,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,EAAJ,CANU;AAMD;AACvBC,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CAPW,CAOF;;AAPE,KAAP,CAArB;AASA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAlCwB;;AAqC7B,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport L from 'leaflet';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nclass Maps extends Component {\n\n    componentDidMount = async () => {\n        // // Creating map options\n        // var mapOptions = {\n        // center: [17.385044, 78.486671],\n        // zoom: 10\n        // }\n        \n        // // Creating a map object\n        // var map = new L.map('map', mapOptions);\n        \n        // // Creating a Layer object\n        // var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');\n        \n        // // Adding layer to the map\n        // map.addLayer(layer);\n    }\n\n    render () {\n        let iconBelumValid = L.icon({\n            iconRetinaUrl: <i className=\"material-icons\">location_on</i>,\n            iconUrl: <i className=\"material-icons\">location_on</i>,\n            iconSize: [45, 45], // size of the icon\n            shadowSize: [50, 64], // size of the shadow\n            iconAnchor: [22, 45], // point of the icon which will correspond to marker's location\n            shadowAnchor: [4, 62], // the same for the shadow\n            popupAnchor: [0, -43] // point from which the popup should open relative to the iconAnchor\n          });\n        return (\n            <React.Fragment>\n              {/* <div id = \"map\"></div> */}\n            </React.Fragment>    \n        );\n    }\n}\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}